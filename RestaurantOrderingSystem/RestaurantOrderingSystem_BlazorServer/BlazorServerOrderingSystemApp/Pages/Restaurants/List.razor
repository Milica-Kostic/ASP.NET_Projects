@page "/Restaurants/List"
@inject IHttpClientFactory _clientFactory

@if (string.IsNullOrWhiteSpace(errorString) == false)
{
    <h3>System error</h3>
    <p>@errorString</p>
}
else if (restaurants is null)
{
    <h3>Loading...</h3>
}
else
{
    <div class="row">
        <div class="col-lg-10 col-md-10 mx-auto">
            <h3 class="text-center">Restaurants</h3>
            <div class="form-group">
                <a href="/Restaurants/Create" class="btn btn-warning">Add Restaurant</a>
            </div>
            <table class="table table-striped">
                <thead class="thead-dark">
                    <tr>
                        <th width="40%">Name</th>
                        <th width="40%">City</th>
                        <th width="20%"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var r in restaurants)
                    {
                        <tr>
                            <td>@r.RestName</td>
                            <td>@r.City</td>
                            <td class="text-center"><a href="/Restaurants/Display/@r.Id" class="btn btn-warning">Restaurant Details</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
}
@code {
    private List<RestaurantModel> restaurants;
    private string errorString;


    protected override async Task OnInitializedAsync()
    {
        var client = _clientFactory.CreateClient("API");

        try
        {
            restaurants = await client.GetFromJsonAsync<List<RestaurantModel>>("api/restaurants");

        }
        catch (Exception ex)
        {
            errorString = ex.InnerException.Message;

        }
    }
}